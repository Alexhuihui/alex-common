name: Release to JitPack

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Extract version from root <version> tag
        id: version
        run: |
          VERSION=$(xmllint --xpath "string(/*[local-name()='project']/*[local-name()='version'])" pom.xml)
          echo "Version from pom.xml is $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          TAG="${{ steps.version.outputs.version }}"
          echo "Checking if tag $TAG exists..."
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG$"; then
            echo "Tag already exists: $TAG"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag does not exist: $TAG"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Force re-tag and delete release if tag exists
        if: steps.check_tag.outputs.exists == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.version.outputs.version }}"
          REPO="${{ github.repository }}"

          echo "🔍 Trying to delete GitHub Release for tag $TAG"
          API_URL="https://api.github.com/repos/$REPO/releases/tags/$TAG"

          # 查询 release ID
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $API_URL)
          RELEASE_ID=$(echo "$RESPONSE" | jq -r '.id')

          if [ "$RELEASE_ID" != "null" ]; then
            echo "✅ Found Release ID: $RELEASE_ID. Deleting release..."
            curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/$REPO/releases/$RELEASE_ID
          else
            echo "⚠️ No GitHub Release found for $TAG"
          fi

          echo "🗑 Deleting remote tag $TAG"
          git push --delete origin "$TAG"

          if git tag | grep -q "^$TAG$"; then
            echo "🧹 Deleting local tag $TAG"
            git tag -d "$TAG"
          else
            echo "✅ Local tag $TAG does not exist, skipping"
          fi

          echo "🔁 Re-creating and pushing tag $TAG"
          git tag -a "$TAG" -m "Force re-release $TAG"
          git push origin "$TAG"
      

      - name: Create tag (if not exists)
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          TAG="${{ steps.version.outputs.version }}"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      - name: Trigger JitPack Rebuild
        run: |
          echo "Triggering JitPack rebuild..."
          curl -s "https://jitpack.io/com/github/${{ github.repository }}/$(echo ${{ steps.version.outputs.version }} | tr -d 'v')/build.log" > /dev/null

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ steps.version.outputs.version }}"
          name: "Release ${{ steps.version.outputs.version }}"
          body: |
            🎉 **What's New in ${{ steps.version.outputs.version }}**

            自动构建发布，子模块包含：

            - alex-base
            - alex-redis
            - alex-rocketmq
            - alex-db
            - alex-security
            - alex-web
            - alex-file

            🔗 链接：
            - [源码浏览](https://github.com/${{ github.repository }}/tree/v${{ steps.version.outputs.version }})
            - [提交记录](https://github.com/${{ github.repository }}/commits/v${{ steps.version.outputs.version }})
            - [JitPack 构建地址](https://jitpack.io/#${{ github.repository }}/v${{ steps.version.outputs.version }})

            ---
            🚀 本版本由 GitHub Actions 自动生成。